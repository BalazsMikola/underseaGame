// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrategyGame.Dal;

namespace StrategyGame.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StrategyGame.Model.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grow_coral");

                    b.Property<int>("Grow_pop");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("Space");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Coral");

                    b.Property<string>("Name");

                    b.Property<int>("Pearl");

                    b.Property<int>("Population");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityArmy", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("EnemyId");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.ToTable("CityArmy");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityBuilding", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("Number");

                    b.Property<int>("RoundToFinish");

                    b.HasKey("Id");

                    b.ToTable("CityBuilding");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityUnit", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("Number");

                    b.Property<int?>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("CityUnit");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityUpgrade", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("RoundToFinish");

                    b.HasKey("Id");

                    b.ToTable("CityUpgrade");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.Rounds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ElapsedRounds");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<int>("Cost");

                    b.Property<int>("Defend");

                    b.Property<int>("Food");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.Upgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<int>("Coral");

                    b.Property<int>("Defend");

                    b.Property<string>("Name");

                    b.Property<int>("Tax");

                    b.HasKey("Id");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityArmy", b =>
                {
                    b.HasOne("StrategyGame.Model.Entities.City", "City")
                        .WithMany("CityArmies")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrategyGame.Model.Entities.Unit", "Unit")
                        .WithOne("Army")
                        .HasForeignKey("StrategyGame.Model.Entities.CityArmy", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityBuilding", b =>
                {
                    b.HasOne("StrategyGame.Model.Entities.Building", "Building")
                        .WithMany("CityBuildings")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrategyGame.Model.Entities.City", "City")
                        .WithMany("CityBuildings")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityUnit", b =>
                {
                    b.HasOne("StrategyGame.Model.Entities.City", "City")
                        .WithMany("CityUnits")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrategyGame.Model.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrategyGame.Model.Entities.Unit")
                        .WithMany("CityUnits")
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("StrategyGame.Model.Entities.CityUpgrade", b =>
                {
                    b.HasOne("StrategyGame.Model.Entities.City", "City")
                        .WithOne("Upgrade")
                        .HasForeignKey("StrategyGame.Model.Entities.CityUpgrade", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StrategyGame.Model.Entities.Upgrade", "Upgrade")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
